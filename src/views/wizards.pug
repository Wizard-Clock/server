extends layout

block content
    div(class="row justify-content-center")
        div(class="col-auto w-75")
            div()
                h1(class="pb-2 mb-4 border-bottom") Wizard Management
                table(class="table table-striped table-hover")
                    thead()
                        tr()
                            th(scope="col") ID
                            th(scope="col") Username
                            th(scope="col") Role
                            th(scope="col") Reporting Method
                            th(scope="col") Follower
                            th(scope="col") Wizard Following
                            th(scope="col") Edit
                            th(scope="col") Delete
                    tbody()
                        each wizard in wizards
                            tr()
                                th(scope="row" id="wizardID")= wizard.id
                                td()= wizard.username
                                td()= wizard.role
                                td()= wizard.reportingMethod
                                td()= wizard.isFollower
                                if wizard.isFollower === "true"
                                    td()= wizard.lead.username
                                else
                                    td()= "N/A"
                                td()
                                    button(type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#editModal" data-bs-wizard= wizard)
                                        i(class="bi bi-pencil-square")
                                if wizard.id === 1
                                    td() Cannot Delete
                                else
                                    td()
                                        button(type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-wizard-id= wizard.id data-bs-wizard-name= wizard.username)
                                            i(class="bi bi-trash3-fill")

                button(type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal" onclick=`setUpAddForm()`) Add Wizard&nbsp;
                    i(class="bi bi-person-plus-fill")

            div(class="pt-4")
                h3(class="pb-2 mb-4 border-bottom") Wizard Location Info
                table(class="table table-striped table-hover")
                    thead()
                        tr()
                            th(scope="col") Username
                            if releaseType === "development"
                                th(scope="col") View Path
                                th(scope="col") Clear Path Log
                            th(scope="col") Assign Location
                    tbody()
                        each wizard in wizards
                            tr()
                                td()= wizard.username
                                if releaseType === "development"
                                    td()
                                        if wizard.posistionLog.length > 0
                                            button(type="button" class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#viewPathModal" data-bs-wizard-log= wizard.posistionLog)
                                                i(class="bi bi-map")
                                        else
                                            p() No Logged Locations
                                    td()
                                        if wizard.posistionLog.length > 0
                                            button(type="button" class="btn btn-outline-danger" onclick=`clearUserLog(${wizard.id})`)
                                                i(class="bi bi-trash3-fill")
                                        else
                                            p() Log is Empty
                                if wizard.isFollower === "true"
                                    td()= "N/A for Followers"
                                else
                                    if wizard.reportingMethod === "auto"
                                        td()= "Auto Enabled"
                                    else
                                        td()
                                            form(id="manualPositionUpdateForm")
                                                section()
                                                    select(class="form-select" id=`manualPosition${wizard.id}Select` onchange=`updateManualPosition(${wizard.id})`)
                                                        option(selected disabled value="") Update Location...
                                                        each loc in locations
                                                            option(value= loc.id)= loc.name



            div(class="modal fade" id="viewPathModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="viewPathModalLabel" aria-hidden="true")
                div(class="modal-dialog modal-dialog-centered modal-lg")
                    div(class="modal-content")
                        div(class="modal-header")
                            h1(class="modal-title fs-5" id="viewPathModalLabel") Wizard's Path
                            button(type="button" class="btn-close" onclick="dismissPathView()" aria-label="Close")
                        div(class="modal-body")
                            div(id="map")
                        div(class="modal-footer")
                            button(type="button" class="btn btn-secondary" onclick="dismissPathView()") Close Map

            div(class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true")
                div(class="modal-dialog modal-dialog-centered")
                    div(class="modal-content")
                        div(class="modal-header")
                            h1(class="modal-title fs-5" id="deleteModalLabel") Confirm Delete Wizard
                            button(type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close")
                        div(class="modal-body")
                            p() Are you sure you want to delete this wizard?
                            p(class="wizard_username")
                            p(class="wizard_id")
                        div(class="modal-footer")
                            button(type="button" class="btn btn-secondary" data-bs-dismiss="modal") Cancel
                            button(type="button" class="btn btn-primary" onclick="deleteUserAction()") Delete

            div(class="modal fade" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true")
                div(class="modal-dialog modal-dialog-centered")
                    div(class="modal-content")
                        div(class="modal-header")
                            h1(class="modal-title fs-5" id="editModalLabel") Edit Wizard
                            button(type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close")
                        div(class="modal-body")
                            form(class="row g-3" id="editUserForm")
                                div(class="col-md-2")
                                    section()
                                        label(for="userId" class="form-label") ID
                                        input(type="text" class="form-control user-id" name="userid" id='userid' disabled)
                                div(class="col-md-6")
                                    section()
                                        label(for="usernameEdit" class="form-label") Username
                                        input(type="text" class="form-control username" name="username" id="usernameEdit")
                                div(class="col-md-4")
                                    section()
                                        label(for="roleEditInput" class="form-label") Role
                                        select(id="roleEditInput" class="form-select role-select" name="role" onchange=`validateRoleChange("Edit")`)
                                            option(selected disabled value="") Choose...
                                            for role in roles
                                                option(value= role.role)=role.role
                                div(class="col-md-6")
                                    section()
                                        label(for="passwordEdit" class="form-label") Password
                                        input(type="text" class="form-control" name="password" id="passwordEdit")
                                div(class="col-md-6")
                                    section()
                                        label(for="passwordEditConfirm" class="form-label") Confirm Password
                                        input(type="password" class="form-control" id="passwordEditConfirm")
                                div(class="col-md-3")
                                    section()
                                        input(class="form-check-input followerEditCB followCheck" type="checkbox" value="" name="isFollower" id="followerEditCheck")
                                        label(for="followerEditCheck" class="form-label") &nbsp;Is Follower?
                                div(class="col-md-5" id="reportingMethodEditDiv")
                                    section()
                                        label(for="reportingMethodEdit" class="form-label") Reporting Method
                                        select(id="reportingMethodEdit" class="form-select rp-select" name="reportingMethod")
                                            option(selected disabled value="") Choose...
                                                option(value="auto")= "Auto (with App)"
                                                option(value="manual")= "Manual"
                                div(class="col-md-4" id="leadInputEditDiv")
                                    section()
                                        label(for="selectEditLead" class="form-label") Lead Wizard
                                        select(id="selectEditLead" class="form-select lead-select" name="leadID")
                                            each wiz in wizards
                                                if wiz.role !== "child"
                                                    option(value= wiz.id)= wiz.username
                        div(class="modal-footer")
                            button(type="button" class="btn btn-secondary" data-bs-dismiss="modal") Cancel
                            button(type="button" class="btn btn-primary" onclick="editUserAction()") Apply Changes

            div(class="modal fade" id="addUserModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true")
                div(class="modal-dialog modal-dialog-centered")
                    div(class="modal-content")
                        div(class="modal-header")
                            h1(class="modal-title fs-5" id="addUserModalLabel") Add User
                            button(type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close")
                        div(class="modal-body")
                            form(class="row g-3" id="addUserForm")
                                div(class="col-md-6")
                                    section()
                                        label(for="usernameAddInput" class="form-label") Username
                                        input(type="text" class="form-control" name="username" id="usernameAddInput" required)
                                div(class="col-md-6")
                                    section()
                                        label(for="roleAddInput" class="form-label") Role
                                        select(id="roleAddInput" class="form-select" name="role" required onchange=`validateRoleChange("Add")`)
                                            option(selected disabled value="") Choose...
                                            for role in roles
                                                option()=role.role
                                div(class="col-md-6")
                                    section()
                                        label(for="passwordAddPlain" class="form-label") Password
                                        input(type="text" class="form-control" name="password" id="passwordAddPlain" required)
                                div(class="col-md-6")
                                    section()
                                        label(for="passwordAddFinal" class="form-label") Confirm Password
                                        input(type="password" class="form-control" id="passwordAddFinal" required)
                                div(class="col-md-3")
                                    section()
                                        input(class="form-check-input followerAddCB" type="checkbox" value="" name="isFollower" id="followerAddCheck")
                                        label(for="followerAddCheck" class="form-label") &nbsp;Is Follower?
                                div(class="col-md-5" id="reportingMethodAddDiv")
                                    section()
                                        label(for="reportingMethodAdd" class="form-label") Reporting Method
                                        select(id="reportingMethodAdd" class="form-select" name="reportingMethod")
                                            option(selected disabled value="") Choose...
                                                option(value="auto")= "Auto (with App)"
                                                option(value="manual")= "Manual"
                                div(class="col-md-4" id="leadInputAddDiv")
                                    section()
                                        label(for="selectLead" class="form-label") Lead Wizard
                                        select(id="selectLead" class="form-select" name="leadID")
                                            each wiz in wizards
                                                if wiz.role !== "child"
                                                    option(value= wiz.id)= wiz.username
                                div(class="col-12")
                                    button(type="submit" class="btn btn-primary") Add User
                        div(class="modal-footer")
                            button(type="button" class="btn btn-secondary" data-bs-dismiss="modal") Cancel

            script.
                const userMap = L.map('map').setView([41.737023, -99.587382], 5);
                L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                }).addTo(userMap);

                let userLine;
                let viewPathModal = document.getElementById('viewPathModal');
                if (viewPathModal) {
                    viewPathModal.addEventListener('show.bs.modal', event => {
                        setTimeout(function () {
                            userMap.invalidateSize();
                        }, 500);
                        const button = event.relatedTarget;

                        const wizardLog = JSON.parse(button.getAttribute('data-bs-wizard-log'));
                        let latLongMap = [];
                        for (let posLog of wizardLog) {
                            latLongMap.push([posLog.latitude, posLog.longitude]);
                        }

                        userLine = L.polyline(latLongMap, {color: 'red'}).addTo(userMap);
                        userMap.fitBounds(userLine.getBounds());
                    });
                }

                async function dismissPathView() {
                    let viewPathModal = document.getElementById('viewPathModal');
                    if (viewPathModal) {
                        if (userLine != null && userMap.hasLayer(userLine)) {userMap.removeLayer(userLine)}
                        $('#viewPathModal').modal('hide');
                    }
                }

                async function clearUserLog(wizardID) {
                    if (wizardID) {
                        let response = await fetch('/wizards/clearUserLog', {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({id: wizardID})
                        });
                        await response.json();
                        window.location.reload();
                    }
                }

                let wizardList = JSON.parse(`!{JSON.stringify(wizards)}`);
                for(let wiz of wizardList) {
                    if (wiz.reportingMethod === "manual") {
                        let positionSelect = document.getElementById('manualPosition' + wiz.id + 'Select');
                        if (positionSelect) {
                            positionSelect.value = wiz.positionID;
                        }
                    }
                }

                async function updateManualPosition(userID) {
                    let positionSelect = document.getElementById('manualPosition' + userID + 'Select');
                    if (positionSelect) {
                        await fetch('/wizards/manualPositionUpdate', {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                userID: userID,
                                positionID: positionSelect.value
                            })
                        });
                    }
                }

                let deleteModal = document.getElementById('deleteModal');
                if (deleteModal) {
                    deleteModal.addEventListener('show.bs.modal', event => {
                        const button = event.relatedTarget;

                        const wizName = button.getAttribute('data-bs-wizard-name');
                        const modalBodyUsername = deleteModal.querySelector('.wizard_username');
                        modalBodyUsername.textContent = `Username: ${wizName}`;

                        const wizID = button.getAttribute('data-bs-wizard-id');
                        const modalBodyID = deleteModal.querySelector('.wizard_id');
                        modalBodyID.textContent = `ID: ${wizID}`;
                    });
                }

                async function deleteUserAction() {
                    let deleteModal = document.getElementById('deleteModal');
                    if (deleteModal) {
                        let idString = document.getElementById('deleteModal').querySelector('.wizard_id').textContent;
                        idString = idString.slice(3).trim();
                        let response = await fetch('/wizards/deleteUser', {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({id: idString})
                        });
                        let result = await response.json();
                        if (result.success) {
                            $('#deleteModal').modal('hide');
                            window.location.reload();
                        } else {
                            alert("Deletion Error");
                        }
                    }
                }

                async function validateRoleChange(formType) {
                    let role = document.getElementById('role' + formType + 'Input').value;
                    if (role) {
                        let reportingOptions = document.getElementById('reportingMethod' + formType);
                        let autoOptionIdx;
                        for (let idx = 0; idx < reportingOptions.length; idx++) {
                            if (reportingOptions.options[idx].value === 'auto') {
                                autoOptionIdx = idx;
                            }
                        }

                        if (role === "child") {
                            if (autoOptionIdx) {
                                reportingOptions.remove(autoOptionIdx);
                            }
                        } else {
                            if (!autoOptionIdx) {
                                let opt = document.createElement('option');
                                opt.value = 'auto';
                                opt.innerHTML = "Auto (with App)";
                                reportingOptions.appendChild(opt);
                            }
                        }
                    }
                }

                let editModal = document.getElementById('editModal');
                if (editModal) {
                    editModal.addEventListener('show.bs.modal', event => {
                        const button = event.relatedTarget;

                        const wiz = JSON.parse(button.getAttribute('data-bs-wizard'));

                        editModal.querySelector('.user-id').value = wiz.id;
                        editModal.querySelector('.username').value = wiz.username;
                        editModal.querySelector('.role-select').value = wiz.role;
                        editModal.querySelector('.rp-select').value = wiz.reportingMethod;
                        editModal.querySelector('.followCheck').checked = (wiz.isFollower === "true");
                        if (wiz.isFollower === "true") {
                            $("#leadInputEditDiv").show();
                            $("#reportingMethodEditDiv").hide();
                            editModal.querySelector('.lead-select').value = wiz.lead.id;
                        } else {
                            $("#leadInputEditDiv").hide();
                            $("#reportingMethodEditDiv").show();
                        }
                    });
                }

                async function editUserAction() {
                    let editModal = document.getElementById('editModal');
                    if (editModal) {
                        let pass = document.getElementById('passwordEdit').value;
                        if (pass !== "") {
                            let passConf = document.getElementById('passwordEditConfirm').value;
                            if (pass !== passConf) {
                                alert("Passwords must match.");
                                return;
                            }
                        }
                        let wizardID = document.getElementById('userid').value;
                        let isFollower = document.getElementById('followerEditCheck').checked;
                        let leadID;
                        if (isFollower) {
                            leadID = document.getElementById('selectEditLead').value;
                            if (leadID === wizardID) {
                                alert("Wizard cannot follow themselves.");
                                return;
                            }
                        }
                        let reportingMethod = isFollower ? "follow" : document.getElementById('reportingMethodEdit').value;
                        if (reportingMethod === '') {
                            alert("Must select reporting method.");
                            return;
                        }

                        let response = await fetch('/wizards/updateUser', {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                id: wizardID,
                                username: document.getElementById('usernameEdit').value,
                                role: document.getElementById('roleEditInput').value,
                                reportingMethod: reportingMethod,
                                password: pass,
                                isFollower: isFollower.toString(),
                                leadID: leadID
                            })
                        });
                        let result = await response.json();
                        if (result.success) {
                            $('#editModal').modal('hide');
                            window.location.reload();
                        } else {
                            alert("Edit Error");
                        }
                    }
                }

                function setUpAddForm() {
                    $("#leadInputAddDiv").hide();
                    $("#reportingMethodAddDiv").show();
                    document.getElementById('followerAddCheck').checked = false;
                }

                let addUserForm = document.getElementById('addUserForm');
                addUserForm.onsubmit = async (e) => {
                    e.preventDefault();
                    let firstPass = document.getElementById('passwordAddPlain').value;
                    let secPass = document.getElementById('passwordAddFinal').value;
                    let isFollower = document.getElementById('followerAddCheck').checked;
                    let reportingMethod = document.getElementById('reportingMethodAdd').value;
                    let leadID = document.getElementById('selectLead').value;

                    if (firstPass !== secPass) {
                        alert("Passwords much match.");
                    } else if (isFollower && !leadID) {
                        alert("Must assign the wizard a Lead Wizard.");
                    } else if (!isFollower && !reportingMethod) {
                        alert("Must assign a reporting method");
                    } else {
                        let response = await fetch('/wizards/addUser', {
                            method: 'POST',
                            body: new FormData(addUserForm)
                        });
                        let result = await response.json();
                        if (result.success) {
                            addUserForm.reset();
                            window.location.reload();
                        } else {
                            alert("Submission Error");
                        }
                    }
                }

                $(".followerEditCB").change(function () {
                    if (this.checked) {
                        $("#leadInputEditDiv").show();
                        $("#reportingMethodEditDiv").hide();
                    } else {
                        $("#leadInputEditDiv").hide();
                        $("#reportingMethodEditDiv").show();
                    }
                });

                $(".followerAddCB").change(function () {
                    if (this.checked) {
                        $("#leadInputAddDiv").show();
                        $("#reportingMethodAddDiv").hide();
                    } else {
                        $("#leadInputAddDiv").hide();
                        $("#reportingMethodAddDiv").show();
                    }
                });
